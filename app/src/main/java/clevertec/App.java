/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package clevertec;

import java.sql.Connection;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;
import java.util.function.BiConsumer;
import java.util.function.Consumer;

import javax.swing.plaf.synth.SynthStyle;

import org.checkerframework.checker.units.qual.degrees;

import clevertec.account_interest.scheduler.InterestChecker;
import clevertec.account_interest.scheduler.InterestCheckerFactory;
import clevertec.transaction.ActionType;
import clevertec.transaction.Transaction;
import clevertec.transaction.TransactionAction;
import clevertec.transaction.check.ActionDescription;
import clevertec.transaction.check.TransactionCheck;
import clevertec.transaction.check.TransactionPrinter;
import clevertec.util.*;

public class App {

    public static void main(String[] args) throws InterruptedException, ExecutionException {
        // InterestChecker checker = InterestCheckerFactory.aInterestChecker();
        // checker.run();

        // checker.stop();
        // System.out.println("hello");


        TransactionCheck c = new TransactionCheck();
        c.setDateTime(LocalDateTime.now());
        c.setDescription(ActionDescription.ACCOUNT_TRANSFER_ADD);
        c.setId("123");
        c.setOriginBank("Bank1");
        c.setTargetBank("Bank2");
        c.setOriginAccountNumber("123");
        c.setTargetAccountNumber("1234");
        c.setMoney(100);

        System.out.println(new TransactionPrinter().text(c));
    }

    static public void exampleFlow() {
        var bank = new Bank("example");
        var user1 = new User("Kolya", "Urusov", "1990-02-23");
        var user2 = new User("Pasha", "Urusov", "1990-02-23");
        var account1 = new Account(user1, bank, 100);
        var account2 = new Account(user2, bank, 20);

        Transaction transaction = new Transaction(account1);
        System.out.println("Before 1:: " + account1.getMoney());
        System.out.println("Before 2:: " + account2.getMoney());

        Transaction transaction2 = new Transaction(account2, account1);

        transaction.beginTransaction(
                new TransactionAction(ActionType.ADD, 10),
                new TransactionAction(ActionType.SUB, 5));
        transaction2.beginTransaction(
                new TransactionAction(ActionType.ADD, 15),
                new TransactionAction(ActionType.SUB, 5));

        System.out.println("After1 :: " + account1.getMoney());
        System.out.println("After2 :: " + account2.getMoney());

    }

}
